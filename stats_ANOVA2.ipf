#pragma rtGlobals=1Macro ANOVA_2_way()p2wA()proc p2wA(str_input,str_target,str_match,str_output)string str_inputprompt str_input "input waves ?"string str_targetprompt str_target "target string ?"string str_matchprompt str_match "matching string ?"string str_outputprompt str_output "output waves ?"string/g str_list = sortlist(wavelist(str_input,";",""),";",16)variable/g var_x_size = 0variable/g var_y_size = 2variable/g var_z_size = itemsinlist(str_list)silent 1pauseupdatevariable/g var_index = 0string/g str_list_matchstring/g str_list_totaldo	if (var_index == 0)		str_list_match = replacestring(str_target,stringfromlist(var_index,str_list),str_match)		str_list_total = stringfromlist(var_index,str_list)+";"+replacestring(str_target,stringfromlist(var_index,str_list),str_match)	else		str_list_match = str_list_match+";"+replacestring(str_target,stringfromlist(var_index,str_list),str_match)		str_list_total = str_list_total+";"+stringfromlist(var_index,str_list)+";"+replacestring(str_target,stringfromlist(var_index,str_list),str_match)	endif	var_index+=1while (var_index < itemsinlist(str_list))variable/g var_index = 0do	wavestats/q $stringfromlist(var_index,str_list_total)	if (var_x_size < v_endrow+1)		var_x_size = v_endrow+1	endif	print "\rJarque-Bera test :"	print stringfromlist(var_index,str_list_total)	statsjbtest/z $stringfromlist(var_index,str_list_total)	if (w_jbresults[%JBStatistic] >= w_jbresults[%Critical])		var_norm = 0		print "no normality"	endif	if (v_flag == -1)		var_norm = 0		print "no normality"	endif	var_index = var_index + 1while (var_index < itemsinlist(str_list_total))print "\rBarlett test :"print str_list_totalstatsvariancestest/z/wstr=str_list_totalif (w_statsvariancestest[%Bartlett_T] >= w_statsvariancestest[%Critical])	var_norm = 0	print "no homoscedasticity"endifif (v_flag == -1)	var_norm = 0	print "no normality"endifvariable/g var_index = 0make/o/n=(var_x_size,var_y_size,var_z_size) $(str_output+"_m")do	$(str_output+"_m")[][0][var_index] = $stringfromlist(var_index,str_list)[p]	setdimlabel 2,var_index,$stringfromlist(var_index,str_list),$(str_output+"_m")	$(str_output+"_m")[][1][var_index] = $stringfromlist(var_index,str_list_match)[p]	//setdimlabel 2,1,$stringfromlist(var_index,str_list_match),$(str_output+"_m")	var_index+=1while (var_index < var_z_size)statsanova2test/modl=1 $(str_output+"_m")print str_list_totalprint "\rRepeated-measures ANOVA :"print "Factor A, p = "print 1-statsfcdf(m_anova2results[%factor_A][%F],m_anova2results[%factor_A][%DF],m_anova2results[%error_within_cells][%DF])print "Factor B, p = "print 1-statsfcdf(m_anova2results[%factor_B][%F],m_anova2results[%factor_B][%DF],m_anova2results[%error_within_cells][%DF])print "Factor AxB, p = "print 1-statsfcdf(m_anova2results[%A_x_B][%F],m_anova2results[%A_x_B][%DF],m_anova2results[%error_within_cells][%DF])make/o/n=3 $("w2Ap_"+str_output)$("w2Ap_"+str_output)[0] = 1-statsfcdf(m_anova2results[%factor_A][%F],m_anova2results[%factor_A][%DF],m_anova2results[%error_within_cells][%DF])$("w2Ap_"+str_output)[1] = 1-statsfcdf(m_anova2results[%factor_B][%F],m_anova2results[%factor_B][%DF],m_anova2results[%error_within_cells][%DF])$("w2Ap_"+str_output)[2] = 1-statsfcdf(m_anova2results[%A_x_B][%F],m_anova2results[%A_x_B][%DF],m_anova2results[%error_within_cells][%DF])setdimlabel 0,0,$("Factor A"),$("w2Ap_"+str_output)setdimlabel 0,1,$("Factor B"),$("w2Ap_"+str_output)setdimlabel 0,2,$("Factor AxB"),$("w2Ap_"+str_output)//setdimlabel 1,0,$("p values"),$("w2Ap_"+str_output)edit $("w2Ap_"+str_output).ldend