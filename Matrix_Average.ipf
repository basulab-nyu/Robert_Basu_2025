macro Matrix_Average()pMAn()proc pMAn(str_input,str_output,str_x_label,str_y_label,str_z_label)string str_inputprompt str_input "input waves ?"string str_outputprompt str_output "output wave ?"string str_x_labelprompt str_x_label "x label ?"string str_y_labelprompt str_y_label "y label ?"string str_z_labelprompt str_z_label "z label ?"string str_indexstring/g str_list = wavelist(str_input,";","")string/g str_list_sort = sortlist (str_list,";",16)string/g str_list_print = wavelist(str_input,"\r","")string/g str_list_sort_print = sortlist (str_list_print,"\r",16)print str_list_sort_printvariable/g var_count = 0variable/g var_x_range = 0variable/g var_y_range = 0variable/g var_x_offset = 0variable/g var_y_offset = 0string/g str_wavesstring/g str_newnamevariable/g var_nb = itemsinlist(str_list_sort)string/g str_graph_list = sortlist(winlist("*",";","WIN:1"),";",16)string/g str_table_list = sortlist(winlist("*",";","WIN:2"),";",16)variable/g var_graph_last = itemsinlist(str_graph_list)-1string/g str_graph_last = winname(0,1)variable/g var_table_last = itemsinlist(str_table_list)-1string/g str_table_last = winname(0,2)getwindow $str_graph_last, wsizevariable/g var_left_g = v_left + 5.25variable/g var_top_g = v_top + 22.5variable/g var_right_g = v_right + 5.25variable/g var_bottom_g = v_bottom + 22.5getwindow $str_table_last, wsizevariable/g var_left_t = v_left + 5.25variable/g var_top_t = v_top + 22.5variable/g var_right_t = v_right + 5.25variable/g var_bottom_t = v_bottom + 22.5dosilent 1	str_waves = stringfromlist(var_count,str_list_sort)	if (strlen(str_waves) == 0)		break	endif	if (var_count == 0)		var_x_offset = dimoffset($str_waves,0)		var_y_offset = dimoffset($str_waves,1)		if (var_x_offset >= 0)			var_x_range = dimsize($str_waves,0)+dimoffset($str_waves,0)/dimdelta($str_waves,0)		else			var_x_range = dimsize($str_waves,0)-dimoffset($str_waves,0)/dimdelta($str_waves,0)		endif		if (var_y_offset >= 0)			var_y_range = dimsize($str_waves,1)+dimoffset($str_waves,1)/dimdelta($str_waves,1)		else			var_y_range = dimsize($str_waves,1)-dimoffset($str_waves,1)/dimdelta($str_waves,1)		endif	else		if (dimoffset($str_waves,0) >= 0)			if (var_x_offset >= dimoffset($str_waves,0))				var_x_offset = dimoffset($str_waves,0)			endif		else			if (var_x_offset >= dimoffset($str_waves,0))				var_x_offset = dimoffset($str_waves,0)			endif		endif		if (dimoffset($str_waves,1) >= 0)			if (var_y_offset >= dimoffset($str_waves,1))				var_y_offset = dimoffset($str_waves,1)			endif		else			if (var_y_offset >= dimoffset($str_waves,1))				var_y_offset = dimoffset($str_waves,1)			endif		endif				if (var_x_offset >= 0)			if (var_x_range <= (dimsize($str_waves,0)+dimoffset($str_waves,0)/dimdelta($str_waves,0)))				var_x_range = dimsize($str_waves,0)+dimoffset($str_waves,0)/dimdelta($str_waves,0)			endif		else			if (var_x_range <= (dimsize($str_waves,0)-dimoffset($str_waves,0)/dimdelta($str_waves,0)))				var_x_range = dimsize($str_waves,0)-dimoffset($str_waves,0)/dimdelta($str_waves,0)			endif		endif		if (var_y_offset >= 0)			if (var_y_range <= (dimsize($str_waves,1)+dimoffset($str_waves,1)/dimdelta($str_waves,1)))				var_y_range = dimsize($str_waves,1)+dimoffset($str_waves,1)/dimdelta($str_waves,1)			endif		else			if (var_y_range <= (dimsize($str_waves,1)-dimoffset($str_waves,1)/dimdelta($str_waves,1)))				var_y_range = dimsize($str_waves,1)-dimoffset($str_waves,1)/dimdelta($str_waves,1)			endif		endif	endif	var_count += 1while (1)variable/g var_index = 0dosilent 1	str_waves = stringfromlist(var_index,str_list_sort)	if (strlen(str_waves) == 0)		break	endif	if (var_index == 0)		duplicate/o $str_waves tempM		if (var_x_offset != dimoffset(tempM,0))			variable/g var_x_add = dimoffset(tempM,0)/dimdelta(tempM,0) - var_x_offset/dimdelta(tempM,0)			insertpoints/m=0/v=nan 0,var_x_add,tempM			setscale/p x var_x_offset,dimdelta(tempM,0),"", tempM		endif		if (var_x_range != dimsize(tempM,0))			//variable/g var_x_add = var_x_range/dimdelta(tempM,0) - dimsize(tempM,0)/dimdelta(tempM,0)			variable/g var_x_add = var_x_range - dimsize(tempM,0)			//insertpoints/m=0/v=nan dimsize(tempM,0)/dimdelta(tempM,0),var_x_add,tempM			insertpoints/m=0/v=nan dimsize(tempM,0),var_x_add,tempM		endif		if (var_y_offset != dimoffset(tempM,1))			variable/g var_y_add = dimoffset(tempM,1)/dimdelta(tempM,1) - var_y_offset/dimdelta(tempM,1)			insertpoints/m=1/v=nan 0,var_y_add,tempM			setscale/p y var_y_offset,dimdelta(tempM,1),"", tempM		endif		if (var_y_range != dimsize(tempM,1))			//variable/g var_y_add = var_y_range/dimdelta(tempM,1) - dimsize(tempM,1)/dimdelta(tempM,1)			variable/g var_y_add = var_y_range - dimsize(tempM,1)			//insertpoints/m=1/v=nan dimsize(tempM,1)/dimdelta(tempM,1),var_y_add,tempM			insertpoints/m=1/v=nan dimsize(tempM,1),var_y_add,tempM		endif		duplicate/o tempM $(nameofwave($str_waves)+"_sc")		make/o/n=(dimsize(tempM,0),dimsize(tempM,1),var_nb) $(str_output+"_3D") = nan		$(str_output+"_3D")[][][var_index] = tempM[p][q]		setdimlabel 2,var_index,,$(nameofwave($str_waves)+"_sc"),$(str_output+"_3D")		//$str_output = tempM	else		duplicate/o $str_waves tempM		if (var_x_offset != dimoffset(tempM,0))			variable/g var_x_add = dimoffset(tempM,0)/dimdelta(tempM,0) - var_x_offset/dimdelta(tempM,0)			insertpoints/m=0/v=nan 0,var_x_add,tempM			setscale/p x var_x_offset,dimdelta(tempM,0),"", tempM		endif		if (var_x_range != dimsize(tempM,0))			//variable/g var_x_add = var_x_range/dimdelta(tempM,0) - dimsize(tempM,0)/dimdelta(tempM,0)			variable/g var_x_add = var_x_range - dimsize(tempM,0)			//insertpoints/m=0/v=nan dimsize(tempM,0)/dimdelta(tempM,0),var_x_add,tempM			insertpoints/m=0/v=nan dimsize(tempM,0),var_x_add,tempM		endif		if (var_y_offset != dimoffset(tempM,1))			variable/g var_y_add = dimoffset(tempM,1)/dimdelta(tempM,1) - var_y_offset/dimdelta(tempM,1)			insertpoints/m=1/v=nan 0,var_y_add,tempM			setscale/p y var_y_offset,dimdelta(tempM,1),"", tempM		endif		if (var_y_range != dimsize(tempM,1))			//variable/g var_y_add = var_y_range/dimdelta(tempM,1) - dimsize(tempM,1)/dimdelta(tempM,1)			variable/g var_y_add = var_y_range - dimsize(tempM,1)			//insertpoints/m=1/v=nan dimsize(tempM,1)/dimdelta(tempM,1),var_y_add,tempM			insertpoints/m=1/v=nan dimsize(tempM,1),var_y_add,tempM		endif		duplicate/o tempM $(nameofwave($str_waves)+"_sc")		$(str_output+"_3D")[][][var_index] = tempM[p][q]		setdimlabel 2,var_index,,$(nameofwave($str_waves)+"_sc"),$(str_output+"_3D")	endif	var_index += 1while (1)variable/g var_scroll_x = 0make/o/n=(dimsize(tempM,0),dimsize(tempM,1)) $(str_output+"_avg") = nanmake/o/n=(dimsize(tempM,0),dimsize(tempM,1)) $(str_output+"_sem") = nandosilent 1variable/g var_scroll_y = 0	do	duplicate/o $(str_output+"_3D") tempL	matrixop/o tempB=beam(tempL,var_scroll_x,var_scroll_y)	//duplicate/o tempB $("wbeam_"+num2str(var_scroll_x)+"_"+num2str(var_scroll_y))	wavestats/q tempB	$(str_output+"_avg")[var_scroll_x][var_scroll_y] = v_avg	$(str_output+"_sem")[var_scroll_x][var_scroll_y] = v_sem	var_scroll_y += 1	while (var_scroll_y < dimsize(tempL,1))var_scroll_x += 1while (var_scroll_x < dimsize(tempL,0))setscale/p x var_x_offset,dimdelta(tempM,0),"", $(str_output+"_avg")setscale/p x var_x_offset,dimdelta(tempM,0),"", $(str_output+"_sem")setscale/p y var_y_offset,dimdelta(tempM,1),"", $(str_output+"_avg")setscale/p y var_y_offset,dimdelta(tempM,1),"", $(str_output+"_sem")displayappendimage $(str_output+"_avg")modifyimage $(str_output+"_avg") ctab={*,*,rainbow,1}ColorScale/C/N=text0/E/F=0/A=RC/X=5.00/Y=5.00 str_z_labelmovewindow 0,45,430,350movewindow var_left_g,var_top_g,var_right_g,var_bottom_glabel left str_y_labellabel bottom str_x_labelkillwaves tempLkillwaves tempBkillwaves tempMnewgizmoappendtogizmo defaultsurface=$(str_output+"_avg")modifygizmo makecolorwave = {$(str_output+"_sem"), rainbow, 1 }wavestats/q $(str_output+"_sem")variable/g var_Cscale_min = V_minvariable/g var_Cscale_max = V_maxModifyGizmo ModifyObject=surface0,objectType=surface,property={ surfaceColorType,3}ModifyGizmo ModifyObject=surface0,objectType=surface,property={ surfaceColorWave,$(str_output+"_sem_c")}ModifyGizmo ModifyObject=axes0,objectType=Axes,property={ 0,axisLabel,1}ModifyGizmo ModifyObject=axes0,objectType=Axes,property={ 0,axisLabelText,str_x_label}ModifyGizmo ModifyObject=axes0,objectType=Axes,property={0,axisLabelCenter,0}ModifyGizmo ModifyObject=axes0,objectType=Axes,property={ 0,axisLabelDistance,0}ModifyGizmo ModifyObject=axes0,objectType=Axes,property={ 0,axisLabelScale,1}ModifyGizmo ModifyObject=axes0,objectType=Axes,property={ 0,axisLabelRGBA,0.000000,0.000000,0.000000,1.000000}ModifyGizmo ModifyObject=axes0,objectType=Axes,property={ 0,axisLabelTilt,0}ModifyGizmo ModifyObject=axes0,objectType=Axes,property={0,axisLabelFont,"default"}ModifyGizmo ModifyObject=axes0,objectType=Axes,property={ 0,axisLabelFlip,0}ModifyGizmo ModifyObject=axes0,objectType=Axes,property={ 0,labelBillboarding,1}ModifyGizmo ModifyObject=axes0,objectType=Axes,property={ 1,axisLabel,1}ModifyGizmo ModifyObject=axes0,objectType=Axes,property={ 1,axisLabelText,str_y_label}ModifyGizmo ModifyObject=axes0,objectType=Axes,property={1,axisLabelCenter,0}ModifyGizmo ModifyObject=axes0,objectType=Axes,property={ 1,axisLabelDistance,0}ModifyGizmo ModifyObject=axes0,objectType=Axes,property={ 1,axisLabelScale,1}ModifyGizmo ModifyObject=axes0,objectType=Axes,property={ 1,axisLabelRGBA,0.000000,0.000000,0.000000,1.000000}ModifyGizmo ModifyObject=axes0,objectType=Axes,property={ 1,axisLabelTilt,0}ModifyGizmo ModifyObject=axes0,objectType=Axes,property={1,axisLabelFont,"default"}ModifyGizmo ModifyObject=axes0,objectType=Axes,property={ 1,axisLabelFlip,0}ModifyGizmo ModifyObject=axes0,objectType=Axes,property={ 1,labelBillboarding,1}ModifyGizmo ModifyObject=axes0,objectType=Axes,property={ 2,axisLabel,1}ModifyGizmo ModifyObject=axes0,objectType=Axes,property={ 2,axisLabelText,str_z_label}ModifyGizmo ModifyObject=axes0,objectType=Axes,property={2,axisLabelCenter,0}ModifyGizmo ModifyObject=axes0,objectType=Axes,property={ 2,axisLabelDistance,0}ModifyGizmo ModifyObject=axes0,objectType=Axes,property={ 2,axisLabelScale,1}ModifyGizmo ModifyObject=axes0,objectType=Axes,property={ 2,axisLabelRGBA,0.000000,0.000000,0.000000,1.000000}ModifyGizmo ModifyObject=axes0,objectType=Axes,property={ 2,axisLabelTilt,0}ModifyGizmo ModifyObject=axes0,objectType=Axes,property={2,axisLabelFont,"default"}ModifyGizmo ModifyObject=axes0,objectType=Axes,property={ 2,axisLabelFlip,0}ModifyGizmo ModifyObject=axes0,objectType=Axes,property={ 2,labelBillboarding,1}ColorScale/C/N=text0/F=0/A=RC/E  ctab={var_Cscale_min,var_Cscale_max,Rainbow,1}ColorScale/C/N=text0 "SEM"beepend