#pragma rtGlobals=1Macro Split_Matrix_Rows_Batch()pSplit_Matrix_Rows_Batch()proc pSplit_Matrix_Rows_Batch(str_input,str_batch,str_loop,str_names)string str_inputprompt str_input "input waves ?"string str_batchprompt str_batch "batch size ?"string str_loopprompt str_loop "number of repetitions ?"string str_namesprompt str_names "output names [textwave] ?"string/g str_list = sortlist(wavelist(str_input,";",""),";",16)print replacestring(";",str_list,"\r")variable/g var_batch = str2num(str_batch)if(strlen(str_loop)>0)	variable/g var_loop = str2num(str_loop)else	variable/g var_loop = 1endifstring/g str_base = str_input[strsearch(str_input,"*",0)+1,inf]variable/g var_index = 0do	variable/g var_chunk = 0	variable/g var_name = 0	variable/g var_asgn = 0	do		string/g str_prefix = stringfromlist(var_index,str_list)[0,strsearch(stringfromlist(var_index,str_list),str_base,0)]		if(stringmatch(str_prefix[strlen(str_prefix)-1],"_") == 1)			str_prefix = str_prefix[0,strlen(str_prefix)-2]		endif		if(var_loop == 1)			duplicate/o/r=(var_chunk,var_chunk+var_batch-1) $stringfromlist(var_index,str_list) $(str_prefix+$str_names[var_name])		else			if(var_name<numpnts($str_names))				duplicate/o/r=(var_chunk,var_chunk+var_batch-1) $stringfromlist(var_index,str_list) $(str_prefix+$str_names[var_name])			else				//var_asgn=var_name-(dimsize($stringfromlist(var_index,str_list),0)/var_batch)/var_loop				if(var_asgn>(dimsize($stringfromlist(var_index,str_list),0)/var_batch)/var_loop - 1)					var_asgn = 0				endif				duplicate/o/r=(var_chunk,var_chunk+var_batch-1) $stringfromlist(var_index,str_list) tempwave				concatenate/np=0/dl {tempwave},$(str_prefix+$str_names[var_asgn])				killwaves/z tempwave			endif		endif		var_asgn+=1		var_name+=1		var_chunk+=var_batch	while(var_chunk<dimsize($stringfromlist(var_index,str_list),0))	var_index+=1while(var_index<itemsinlist(str_list))end