#pragma rtGlobals=1Macro sort_text()psort_text()proc psort_text(str_input,str_target)string str_inputprompt str_input "input waves ?"string str_targetprompt str_target "target string ?"if(strlen(str_target) == 0)	str_target = "_vs_"endifstring str_list = sortlist(wavelist(str_input,";",""),";",16)print replacestring(";",str_list,"\r")string str_tempstring str_swap1string str_swap2string str_regvariable var_indexvariable var_index1variable var_index2var_index = 0do	duplicate/o $stringfromlist(var_index,str_list) temp1	duplicate/o $stringfromlist(var_index,str_list) temp2	duplicate/o $stringfromlist(var_index,str_list) temporder	temp1 = ""	temp2 = ""	temporder = ""	var_index1 = 0	do		var_index2 = 0		do			str_temp = ""			str_swap1 = ""			str_swap2 = ""			str_temp = $stringfromlist(var_index,str_list)[var_index1][var_index2]			temp1[var_index1][var_index2] = str_temp[0,strsearch(str_temp,str_target,0)-1]			temp2[var_index1][var_index2] = str_temp[strsearch(str_temp,str_target,0)+strlen(str_target),inf]			make/o/n=2/t tempcmp = ""			tempcmp[0] = temp1[var_index1][var_index2]			tempcmp[1] = temp2[var_index1][var_index2]//			str_reg = "([d]{1}+[0-9]{1})"//			splitstring/e=(str_reg) tempcmp[0],str_swap1//			str_reg = "(GOL)"//			splitstring/e=(str_reg) tempcmp[0],str_swap2//			if(strsearch(tempcmp[0],str_swap1,0) < strsearch(tempcmp[0],str_swap2,0))//				tempcmp[0] = replacestring(str_swap1+"_"+str_swap2,tempcmp[0],str_swap2+"_"+str_swap1)//			endif//			str_reg = "([d]{1}+[0-9]{1})"//			splitstring/e=(str_reg) tempcmp[1],str_swap1//			str_reg = "(GOL)"//			splitstring/e=(str_reg) tempcmp[1],str_swap2//			if(strsearch(tempcmp[1],str_swap1,0) < strsearch(tempcmp[1],str_swap2,0))//				tempcmp[1] = replacestring(str_swap1+"_"+str_swap2,tempcmp[1],str_swap2+"_"+str_swap1)//			endif			tempcmp = replacestring("_A1_",tempcmp,"_A_")			tempcmp = replacestring("_C1_",tempcmp,"_C_")						tempcmp = replacestring("_fam1_",tempcmp,"_11_")			tempcmp = replacestring("_fam2_",tempcmp,"_13_")			tempcmp = replacestring("_int_",tempcmp,"_12_")			tempcmp = replacestring("_nov_",tempcmp,"_14_")			tempcmp = replacestring("_A_",tempcmp,"_15_")			tempcmp = replacestring("_A2_",tempcmp,"_17_")			tempcmp = replacestring("_Aa_",tempcmp,"_16_")			tempcmp = replacestring("_B_",tempcmp,"_18_")			tempcmp = replacestring("_C_",tempcmp,"_19_")			tempcmp = replacestring("_C2_",tempcmp,"_21_")			tempcmp = replacestring("_Cc_",tempcmp,"_20_")			tempcmp = replacestring("_D_",tempcmp,"_22_")			tempcmp = replacestring("_11_",tempcmp,"_AA_")			tempcmp = replacestring("_13_",tempcmp,"_A2_")			tempcmp = replacestring("_12_",tempcmp,"_Ab_")			tempcmp = replacestring("_14_",tempcmp,"_B_")			tempcmp = replacestring("_15_",tempcmp,"_CC_")			tempcmp = replacestring("_17_",tempcmp,"_C2_")			tempcmp = replacestring("_16_",tempcmp,"_Cd_")			tempcmp = replacestring("_18_",tempcmp,"_D_")			tempcmp = replacestring("_19_",tempcmp,"_EE_")			tempcmp = replacestring("_21_",tempcmp,"_E2_")			tempcmp = replacestring("_20_",tempcmp,"_Ef_")			tempcmp = replacestring("_22_",tempcmp,"_F_")			sort/a=2 tempcmp,tempcmp			if(strlen(tempcmp[0])>0 && strlen(tempcmp[1])>0)				temporder[var_index1][var_index2] = tempcmp[0]+str_target+tempcmp[1]			endif			killwaves/z tempcmp		var_index2+=1		while(var_index2<dimsize($stringfromlist(var_index,str_list),1))		var_index1+=1	while(var_index1<dimsize($stringfromlist(var_index,str_list),0))	duplicate/o $stringfromlist(var_index,str_list) $(stringfromlist(var_index,str_list)+"_sort")	$(stringfromlist(var_index,str_list)+"_sort") = temporder	killwaves/z temp1,temp2,temporder	var_index+=1while(var_index<itemsinlist(str_list))end