#pragma rtGlobals=1Macro match_textwaves()pmatch_textwaves()proc pmatch_textwaves(str_input,str_output)string str_inputprompt str_input "input waves (string or textwave) ?"string str_outputprompt str_output "output waves ?"if(exists(str_input) == 1 && wavetype($str_input,1) == 2)	string str_list	variable/g var_fill = 0	do		if(var_fill == 0)			str_list = $str_input[var_fill]		else			str_list = str_list+";"+$str_input[var_fill]		endif		var_fill+=1	while(var_fill<numpnts($str_input))else	string str_list = sortlist(wavelist(str_input,";",""),";",16)endifprint replacestring(";",str_list,"\r")if(exists("str_listrev") == 2)	killstrings/z str_listrevendifstring/g str_listrevvariable/g var_index = 0do	if(var_index == 0)		string/g str_ref = stringfromlist(itemsinlist(str_list)-1,str_list)	else		string/g str_ref = stringfromlist(var_index-1,str_list)+"_"+str_output	endif	duplicate/o $stringfromlist(var_index,str_list) $(stringfromlist(var_index,str_list)+"_"+str_output)	make/o/n=(numpnts($stringfromlist(var_index,str_list))) tempref = 0	if(strlen(str_listrev) == 0)		str_listrev = stringfromlist(var_index,str_list)+"_"+str_output	else		str_listrev = str_listrev+";"+stringfromlist(var_index,str_list)+"_"+str_output	endif	variable/g var_labels = 0	do		string/g str_match = $str_ref[var_labels]		variable/g var_match = 0		do			string/g str_check = $(stringfromlist(var_index,str_list)+"_"+str_output)[var_match]			if(stringmatch(str_match,str_check) == 1)				tempref[var_match] = 1			endif			killstrings/z str_check			var_match+=1		while(var_match<numpnts($(stringfromlist(var_index,str_list)+"_"+str_output)))//		if(var_missing == 1)//			tempadd[var_labels] = 1//		endif		killstrings/z str_match		var_labels+=1	while(var_labels<numpnts($str_ref))	variable/g var_asgn = 0	do		if(tempref[var_asgn] == 0)			$(stringfromlist(var_index,str_list)+"_"+str_output)[var_asgn] = ""		endif		var_asgn+=1	while(var_asgn<numpnts($(stringfromlist(var_index,str_list)+"_"+str_output)))	variable/g var_rm = 0	do		if(strlen($(stringfromlist(var_index,str_list)+"_"+str_output)[var_rm]) == 0)			deletepoints var_rm,1,$(stringfromlist(var_index,str_list)+"_"+str_output)			var_rm = var_rm-1		endif		var_rm+=1	while(var_rm<numpnts($(stringfromlist(var_index,str_list)+"_"+str_output)))	killwaves/z tempref	killstrings/z str_ref	var_index+=1while(var_index<itemsinlist(str_list))string/g str_listrev = sortlist(str_listrev,";",17)variable/g var_index = 0do	if(var_index == 0)		string/g str_ref = stringfromlist(itemsinlist(str_listrev)-1,str_listrev)	else		string/g str_ref = stringfromlist(var_index-1,str_listrev)	endif	make/o/n=(numpnts($stringfromlist(var_index,str_listrev))) tempref = 0	variable/g var_labels = 0	do		string/g str_match = $str_ref[var_labels]		variable/g var_match = 0		do			string/g str_check = $stringfromlist(var_index,str_listrev)[var_match]			if(stringmatch(str_match,str_check) == 1)				tempref[var_match] = 1			endif			killstrings/z str_check			var_match+=1		while(var_match<numpnts($stringfromlist(var_index,str_listrev)))//		if(var_missing == 1)//			tempadd[var_labels] = 1//		endif		killstrings/z str_match		var_labels+=1	while(var_labels<numpnts($str_ref))	variable/g var_asgn = 0	do		if(tempref[var_asgn] == 0)			$stringfromlist(var_index,str_listrev)[var_asgn] = ""		endif		var_asgn+=1	while(var_asgn<numpnts($stringfromlist(var_index,str_listrev)))	variable/g var_rm = 0	do		if(strlen($stringfromlist(var_index,str_listrev)[var_rm]) == 0)			deletepoints var_rm,1,$stringfromlist(var_index,str_listrev)			var_rm = var_rm-1		endif		var_rm+=1	while(var_rm<numpnts($stringfromlist(var_index,str_listrev)))	killwaves/z tempref	killstrings/z str_ref	var_index+=1while(var_index<itemsinlist(str_listrev))end